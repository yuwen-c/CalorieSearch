{"ast":null,"code":"var _jsxFileName = \"/Users/marina/GitHub/calorie/src/Boundary.js\";\nimport React, { Component } from 'react';\n\nclass Boundary extends Component {\n  constructor(props) {\n    //這邊不用'props'當參數就跑不出來？？\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 以至於下一個 render 會顯示 fallback UI\n    return {\n      hasError: true\n    };\n  } // 專門用來接error的life cycle，裡面不用再用try catch\n\n\n  componentDidCatch(error, errorInfo) {\n    console.log('sth went wrong');\n    this.setState({\n      hasError: true\n    });\n    logErrorToMyService(error, errorInfo, 'test');\n  }\n\n  render() {\n    if (this.state.hasError === true) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"sth goes wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default Boundary;","map":{"version":3,"sources":["/Users/marina/GitHub/calorie/src/Boundary.js"],"names":["React","Component","Boundary","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","log","setState","logErrorToMyService","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAI;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG;AADF,KAAb;AAGH;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACnC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD,GAX0B,CAa7B;;;AACAG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAkB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACAQ,IAAAA,mBAAmB,CAACN,KAAD,EAAQE,SAAR,EAAkB,MAAlB,CAAnB;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKV,KAAL,CAAWC,QAAX,KAAwB,IAA5B,EAAiC;AAC7B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAGH;;AACD,WAAO,KAAKF,KAAL,CAAWY,QAAlB;AAEH;;AA5B4B;;AAgCjC,eAAed,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Boundary extends Component {\n    constructor(props){   //這邊不用'props'當參數就跑不出來？？\n        super(props);\n        this.state = {\n            hasError:  false,\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        // 更新 state 以至於下一個 render 會顯示 fallback UI\n        return { hasError: true };\n      }\n\n    // 專門用來接error的life cycle，裡面不用再用try catch\n    componentDidCatch(error, errorInfo){\n        console.log('sth went wrong'); \n        this.setState({hasError: true});\n        logErrorToMyService(error, errorInfo,'test')\n    }\n\n    render(){\n        if (this.state.hasError === true){\n            return(\n                <h1>sth goes wrong.</h1>\n            )\n        }\n        return this.props.children\n        \n    }\n}\n\n\nexport default Boundary;"]},"metadata":{},"sourceType":"module"}