{"ast":null,"code":"var _jsxFileName = \"/Users/marina/GitHub/calorie/src/App.js\";\nimport React from 'react';\nimport './App.css'; //import Card from './Card.js';\n\nimport CardList from './CardList.js';\nimport Search from './Search.js';\nimport Button from './Button.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.searchFood = event => {\n      this.setState({\n        SearchField: event.target.value\n      }, () => console.log('searchFood', this.state.SearchField)); //this.setState({SearchField: event.target.value});\n      // this.setState is async function, to console the right value, we need to use callback syntax.\n    };\n\n    this.btnSearchFood = () => {\n      console.log('btnOK', this.state.SearchField);\n      const foodWanted = this.state.SearchField;\n      const url = 'https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=' + foodWanted; // fetch the entered keyword:\n\n      fetch(url, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(result => {\n        //console.log(result[0].energ_kcal);\n        this.setState({\n          foods: result\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.enterSearchFood = event => {\n      console.log('enterSearchFood', event.keyCode, this.state.SearchField); //if(event.keyCode===13){\n      // console.log('enterSearchFood', event.keyCode, this.state.SearchField);\n      //TypeError: Cannot read property 'state' of undefined ERRRRRROOOOOOOOORRRRR\n      //}\n    };\n\n    this.state = {\n      foods: [],\n      SearchField: 'pork'\n    };\n  } // 1. listen to the changes of searchbox. \n  //    if an event happens, then do this function\n  // 2. in render part, the element owns a property that carry this function\n  //    when it's triggered, execute the function\n  // 3. in search part, also, the search component needs a onChange attribute\n  // 4. the Search component and the App component communicate with props => {onChangeP} \n  // 5. use value to get the value of event  \n\n\n  // 在input裡面設了onChange、onKeyDown\n  // onChange偵測user輸入的字元，每輸一次就去setState。\n  // （有測試過，enter鍵不會被onChange偵測到）\n  // onKeyDown偵測if key === enter，抓state。 =>出現錯誤，說SearchField是undefined\n  // 兩個監聽經console測試都可正常使用，\n  // 也給了SearchField初始值，但在onKeyDown時也抓不到。\n  // Render from the beginning  \n  componentDidMount() {\n    fetch(\"https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=apple\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(result => {\n      //console.log(result[0].energ_kcal);\n      this.setState({\n        foods: result\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Search, {\n      onChangeP: this.searchFood,\n      onKeyDownP: this.enterSearchFood,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClickP: this.btnSearchFood,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(CardList, {\n      foodP: this.state.foods,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marina/GitHub/calorie/src/App.js"],"names":["React","CardList","Search","Button","App","Component","constructor","searchFood","event","setState","SearchField","target","value","console","log","state","btnSearchFood","foodWanted","url","fetch","then","response","json","result","foods","catch","err","enterSearchFood","keyCode","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n//import Card from './Card.js';\nimport CardList from './CardList.js';\nimport Search from './Search.js';\nimport Button from './Button.js';\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      foods: [],\n      SearchField: 'pork'\n    }\n  }\n// 1. listen to the changes of searchbox. \n//    if an event happens, then do this function\n// 2. in render part, the element owns a property that carry this function\n//    when it's triggered, execute the function\n// 3. in search part, also, the search component needs a onChange attribute\n// 4. the Search component and the App component communicate with props => {onChangeP} \n// 5. use value to get the value of event  \n  searchFood = (event) => {\n    this.setState({SearchField: event.target.value}, () => console.log('searchFood', this.state.SearchField));\n    //this.setState({SearchField: event.target.value});\n    \n    // this.setState is async function, to console the right value, we need to use callback syntax.\n  }\n\n\n// CLICK and SEARCH\n  btnSearchFood = () => {\n    console.log('btnOK', this.state.SearchField);\n    const foodWanted = this.state.SearchField;\n    const url = 'https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=' + foodWanted;\n    // fetch the entered keyword:\n    fetch(url, \n          {\n\t        \"method\": \"GET\",\n\t        \"headers\": {\n\t\t                    \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n\t\t                    \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n\t                    }\n          }\n    )\n    .then(response => {\n\t    return response.json()\n    })\n    .then(result => {\n      //console.log(result[0].energ_kcal);\n      this.setState({foods: result})\n    })\n    .catch(err => {\n    \tconsole.log(err);\n    });    \n  }\n// if user instead of clicking the button, presses enter => fetch the keyword\n// 在input的地方要偵測是否按下enter(13) => 不是onChange, 不是onClick, 是onKeyDown\n  enterSearchFood = (event) => {\n    console.log('enterSearchFood', event.keyCode, this.state.SearchField);\n    //if(event.keyCode===13){\n     // console.log('enterSearchFood', event.keyCode, this.state.SearchField);\n    //TypeError: Cannot read property 'state' of undefined ERRRRRROOOOOOOOORRRRR\n    //}\n    \n  }\n// 在input裡面設了onChange、onKeyDown\n// onChange偵測user輸入的字元，每輸一次就去setState。\n// （有測試過，enter鍵不會被onChange偵測到）\n// onKeyDown偵測if key === enter，抓state。 =>出現錯誤，說SearchField是undefined\n// 兩個監聽經console測試都可正常使用，\n// 也給了SearchField初始值，但在onKeyDown時也抓不到。\n\n\n\n// Render from the beginning  \n  componentDidMount(){\n    fetch(\"https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=apple\", \n          {\n\t        \"method\": \"GET\",\n\t        \"headers\": {\n\t\t                    \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n\t\t                    \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n\t                    }\n          }\n    )\n    .then(response => {\n\t    return response.json()\n    })\n    .then(result => {\n      //console.log(result[0].energ_kcal);\n      this.setState({foods: result})\n    })\n    .catch(err => {\n    \tconsole.log(err);\n    });\n  }\n\n  render(){\n    return(\n      <div>\n        <div className='tc'>\n            <Search onChangeP={this.searchFood} onKeyDownP={this.enterSearchFood}/>\n            <Button onClickP={this.btnSearchFood}/>\n        </div>\n          <CardList foodP={this.state.foods}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}