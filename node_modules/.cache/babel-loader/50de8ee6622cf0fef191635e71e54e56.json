{"ast":null,"code":"var _jsxFileName = \"/Users/marina/GitHub/calorie/src/container/App.js\";\nimport React from 'react';\nimport CardList from '../component/CardList.js';\nimport Search from '../component/Search.js';\nimport Button from '../component/Button.js';\nimport Viewport from '../component/Viewport.js';\nimport Boundary from '../component/Boundary.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.keyInFood = event => {\n      //this.setState({SearchField: event.target.value}, () => console.log('keyInFood', this.state.SearchField));\n      this.setState({\n        SearchField: event.target.value\n      }); // this.setState is async function, to console the right value, we need to use callback syntax.\n    };\n\n    this.funFetch = () => {\n      const foodWanted = this.state.SearchField;\n      const url = 'https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=' + foodWanted;\n      fetch(url, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(result => {\n        this.setState({\n          foods: result\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.btnSearchFood = () => {\n      console.log('btnOK', this.state.SearchField);\n      this.funFetch();\n    };\n\n    this.enterSearchFood = event => {\n      if (event.keyCode === 13) {\n        console.log('enterSearchFood', event.keyCode, this.state.SearchField);\n        this.funFetch();\n      }\n    };\n\n    this.state = {\n      foods: [],\n      SearchField: ''\n    };\n  } // listen to the changes of searchbox. \n\n\n  // Render from the beginning, loading page with \"apple\" fetch  \n  componentDidMount() {\n    fetch(\"https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=apple\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(result => {\n      this.setState({\n        foods: result\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.foods.length === 0) {\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Calorie Search\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Loading...\"));\n    } else {\n      // compare [] with keyword of searchField\n      const comparedFoods = this.state.foods.filter(food => {\n        return food.shrt_desc.toLowerCase().includes(this.state.SearchField.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Calorie Search\"), React.createElement(Search, {\n        onChangeP: this.keyInFood,\n        onKeyDownP: this.enterSearchFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClickP: this.btnSearchFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Viewport, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Boundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        foodP: comparedFoods,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marina/GitHub/calorie/src/container/App.js"],"names":["React","CardList","Search","Button","Viewport","Boundary","App","Component","constructor","keyInFood","event","setState","SearchField","target","value","funFetch","foodWanted","state","url","fetch","then","response","json","result","foods","catch","err","console","log","btnSearchFood","enterSearchFood","keyCode","componentDidMount","render","length","comparedFoods","filter","food","shrt_desc","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CardList from '../component/CardList.js';\nimport Search from '../component/Search.js';\nimport Button from '../component/Button.js';\nimport Viewport from '../component/Viewport.js';\nimport Boundary from '../component/Boundary.js';\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      foods: [],\n      SearchField: ''\n    }\n  }\n// listen to the changes of searchbox. \n  keyInFood = (event) => {\n    //this.setState({SearchField: event.target.value}, () => console.log('keyInFood', this.state.SearchField));\n    this.setState({SearchField: event.target.value});\n    // this.setState is async function, to console the right value, we need to use callback syntax.\n    }\n\n  // fetchçš„function, use this api: \"https://rapidapi.com/kenpi04/api/food-calorie-data-search\"\n  funFetch = () => {\n    const foodWanted = this.state.SearchField;\n    const url = 'https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=' + foodWanted;\n    fetch(url, \n      {\n      \"method\": \"GET\",\n      \"headers\": {\n                    \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n                  }\n      }\n    )\n    .then(response => {\n      return response.json()\n    })\n    .then(result => {\n      this.setState({foods: result})\n    })\n    .catch(err => {\n      console.log(err);\n    });  \n  }\n\n// CLICK button and SEARCH(do fetch)\n  btnSearchFood = () => {\n    console.log('btnOK', this.state.SearchField);\n    this.funFetch();  \n  }\n\n// if user instead of clicking the button, presses enter => fetch the keyword\n  enterSearchFood = (event) => {\n    if(event.keyCode===13){\n      console.log('enterSearchFood', event.keyCode, this.state.SearchField);\n      this.funFetch();  \n    }\n  }\n\n// Render from the beginning, loading page with \"apple\" fetch  \n  componentDidMount(){\n    fetch(\"https://food-calorie-data-search.p.rapidapi.com/api/search?keyword=apple\", \n          {\n\t        \"method\": \"GET\",\n\t        \"headers\": {\n\t\t                    \"x-rapidapi-host\": \"food-calorie-data-search.p.rapidapi.com\",\n\t\t                    \"x-rapidapi-key\": \"2da75ce1cfmsh26fa14825a18dd4p16d23bjsn59e64460077f\"\n\t                    }\n          }\n    )\n    .then(response => {\n\t    return response.json()\n    })\n    .then(result => {\n      this.setState({foods: result})\n    })\n    .catch(err => {\n    \tconsole.log(err);\n    });\n  }\n\n  render(){\n    if(this.state.foods.length === 0){\n      return(\n        <div className='tc'>\n          <h1>Calorie Search</h1>\n          <h2>Loading...</h2>\n        </div>\n      )\n    }\n    else{\n    // compare [] with keyword of searchField\n    const comparedFoods = this.state.foods.filter(food => {\n      return food.shrt_desc.toLowerCase().includes(this.state.SearchField.toLowerCase())\n    });\n\n\n    return(\n      <div className='tc'>\n        <div >\n            <h1>Calorie Search</h1>\n            <Search onChangeP={this.keyInFood} onKeyDownP={this.enterSearchFood}/>\n            <Button onClickP={this.btnSearchFood}/>\n        </div>\n          <Viewport>\n            <Boundary>\n              <CardList foodP={comparedFoods}/>\n            </Boundary>\n          </Viewport>\n      </div>\n    )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}